---
# tasks file for mysql
- name: Check for Python3 and pip in Debian Linux
  apt:
    name:
      - python3
      - python3-pip
    state: present
# TODO: this task should only run if the OS is Debian based

- name: Install PyMySQL
  pip:
    name: pymysql
    executable: pip3

- name: Install MySQL server
  apt:
    name: mysql-server
    state: present

- name: Start MySQL service
  service:
    name: mysql
    state: started
    enabled: true

- name: Copy update script to the server
# TODO
  ansible.builtin.copy:
    src: "{{ script_path }}"
    dest: '/tmp/'
    owner: root
    group: root
    mode: '0777' 

- name: Execute the script
# TODO
  ansible.builtin.shell: /tmp/user_script.sh "{{ mysql_password }}"

- name: Output result from script
# TODO
  ansible.builtin.debug:
    var: result
    verbosity: 2

- name: Clean up - remove the script from the remote server
  ansible.builtin.file:
    path: /tmp/user_script.sh
    state: absent
  

- name: Create MySQL database
# TODO
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_database }}"
    state: present

- name: Create MySQL user
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    state: present

#- name: Copy SQL file to remote host
# TODO - this should only be run if mysql_import_data is true
 # ansible.builtin.copy:
  #  src: /user/files/example_db.sql
   # dest: user/files/
    #owner: root
 #   group: root
  #  mode: '0777'

- name: Import SQL data
# TODO

  mysql_db:
    state: import
    name: all
    target: /user/files/example_db.sql
    owner:
    group: root
    mode: '0777'


- name: Update MySQL bind-address and mysqlx-bind-address to allow external connections
# TODO - this can be done in a single task or broken into two tasks, one per line
# Use notify to restart mysql once complete.
  ansible.builtin.lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    search_string: 'bind-address = 127.0.0.1'
    line: bind-address = 0.0.0.0
    owner: root
    group: root
    mode: '0777'

- name: Update MySQL bind-address and mysqlx-bind-addres>
  ansible.builtin.lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    search_string: 'mysqlx-bind-address = 127.0.0.1'
    line: mysqlx-bind-address = 0.0.0.0  
    owner: root
    group: root
    mode: '0777'




